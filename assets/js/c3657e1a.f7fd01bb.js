"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[178],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=d(n),m=i,g=s["".concat(c,".").concat(m)]||s[m]||p[m]||o;return n?r.createElement(g,a(a({ref:t},u),{},{components:n})):r.createElement(g,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},990:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={title:"Guide to Bridged Networking"},c=void 0,d={unversionedId:"guide-networking",id:"guide-networking",title:"Guide to Bridged Networking",description:"Note: you don't need to set up bridged networking just to get internet access. With basic.sh you should be able to access the internet from MacOS automatically. However, the ICMP protocol (used for ping) is not supported with the default networking solution.",source:"@site/docs/guide-networking.md",sourceDirName:".",slug:"/guide-networking",permalink:"/docs/guide-networking",draft:!1,editUrl:"https://github.com/notAperson535/OneClick-macOS-Simple-KVM/tree/docs/docs/guide-networking.md",tags:[],version:"current",frontMatter:{title:"Guide to Bridged Networking"},sidebar:"docs",previous:{title:"Audio passthrough (without external card)",permalink:"/docs/guide-audio"},next:{title:"How to increase disk size",permalink:"/docs/guide-disk-resizing"}},u={},p=[{value:"Using /etc/network/interfaces",id:"using-etcnetworkinterfaces",level:2},{value:"Using NetworkManager",id:"using-networkmanager",level:2},{value:"Make the Bridge",id:"make-the-bridge",level:3},{value:"Attach Bridge to Ethernet",id:"attach-bridge-to-ethernet",level:3},{value:"Make the Tun/Tap",id:"make-the-tuntap",level:3},{value:"Attach Tun/Tap to Bridge",id:"attach-tuntap-to-bridge",level:3},{value:"Attach Bridge to QEMU",id:"attach-bridge-to-qemu",level:2},{value:"Using Netctl",id:"using-netctl",level:2},{value:"Create netctl configuration file in /etc/netctl (f.e. /etc/netctl/kvm-bridge)",id:"create-netctl-configuration-file-in-etcnetctl-fe-etcnetctlkvm-bridge",level:3},{value:"Activate netctl bridge handler with system boot",id:"activate-netctl-bridge-handler-with-system-boot",level:3},{value:"Create bridge whitelist file for qemu (/etc/qemu/bridge.conf)",id:"create-bridge-whitelist-file-for-qemu-etcqemubridgeconf",level:3},{value:"Attach Bridge to QEMU",id:"attach-bridge-to-qemu-1",level:2},{value:"Firewall",id:"firewall",level:2},{value:"<code>Operation not permitted</code> on Debian systems",id:"operation-not-permitted-on-debian-systems",level:2}],s={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note"),": you don't need to set up bridged networking just to get internet access. With ",(0,o.kt)("inlineCode",{parentName:"p"},"basic.sh")," you should be able to access the internet from MacOS automatically. ",(0,o.kt)("em",{parentName:"p"},"However"),", the ICMP protocol (used for ",(0,o.kt)("inlineCode",{parentName:"p"},"ping"),") is not supported with the default networking solution. "),(0,o.kt)("p",null,"To set up bridged networking for the macOS VM, use one of the following methods:"),(0,o.kt)("h2",{id:"using-etcnetworkinterfaces"},"Using /etc/network/interfaces"),(0,o.kt)("p",null,"It is possible to create the bridge and tun/tap interfaces by adding the following lines to ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/network/interfaces"),". Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"DEVICENAME")," with your ethernet card's device name, and ",(0,o.kt)("inlineCode",{parentName:"p"},"MYUSERNAME")," with the user that is starting the VM."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"auto br0\niface br0 inet dhcp\n  bridge_ports DEVICENAME tap0\n\nauto tap0\niface tap0 inet dhcp\n  pre-up tunctl -u MYUSERNAME -t tap0\n")),(0,o.kt)("h2",{id:"using-networkmanager"},"Using NetworkManager"),(0,o.kt)("p",null,"You can use NetworkManager to control the bridge and tun/tap interfaces, by creating them with the following commands. Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"DEVICENAME")," with your ethernet card's device name."),(0,o.kt)("h3",{id:"make-the-bridge"},"Make the Bridge"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nmcli connection add type bridge \\\n    ifname br1 con-name mybridge\n")),(0,o.kt)("h3",{id:"attach-bridge-to-ethernet"},"Attach Bridge to Ethernet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nmcli connection add type bridge-slave \\\n    ifname DEVICENAME con-name mynetwork master br1\n")),(0,o.kt)("h3",{id:"make-the-tuntap"},"Make the Tun/Tap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nmcli connection add type tun \\\n    ifname tap0 con-name mytap \\\n    mode tap owner `id -u`\n")),(0,o.kt)("h3",{id:"attach-tuntap-to-bridge"},"Attach Tun/Tap to Bridge"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nmcli connection mod mytap connection.slave-type bridge \\\n    connection.master br1\n")),(0,o.kt)("h2",{id:"attach-bridge-to-qemu"},"Attach Bridge to QEMU"),(0,o.kt)("p",null,"Once you have set up the bridge and tun/tap on the host, you'll have to add the following line to ",(0,o.kt)("inlineCode",{parentName:"p"},"basic.sh"),", replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"-netdev user,id=net0"),". Change ",(0,o.kt)("inlineCode",{parentName:"p"},"tap0")," to your corresponding device name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    -netdev tap,id=net0,ifname=tap0,script=no,downscript=no \\\n")),(0,o.kt)("h2",{id:"using-netctl"},"Using Netctl"),(0,o.kt)("p",null,"You can also use netctl and the qemu bridge helper to control the bridge and tun/tap interfaces. Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"DEVICENAME")," with your ethernet card's device name."),(0,o.kt)("h3",{id:"create-netctl-configuration-file-in-etcnetctl-fe-etcnetctlkvm-bridge"},"Create netctl configuration file in /etc/netctl (f.e. /etc/netctl/kvm-bridge)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Description="Bridge Interface br10 : DEVICENAME"\nInterface=br10\nConnection=bridge\nBindsToInterfaces=(DEVICENAME) # Do not remove the parenthesis\nIP=dhcp\n# If you want also for DHCPv6,uncomment below line\n#IP6=dhcp\n')),(0,o.kt)("h3",{id:"activate-netctl-bridge-handler-with-system-boot"},"Activate netctl bridge handler with system boot"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo netctl enable kvm-bridge\n")),(0,o.kt)("h3",{id:"create-bridge-whitelist-file-for-qemu-etcqemubridgeconf"},"Create bridge whitelist file for qemu (/etc/qemu/bridge.conf)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"allow br10\n")),(0,o.kt)("h2",{id:"attach-bridge-to-qemu-1"},"Attach Bridge to QEMU"),(0,o.kt)("p",null,"Now you'll have to add the following line to ",(0,o.kt)("inlineCode",{parentName:"p"},"basic.sh"),", replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"-netdev user,id=net0"),". Change ",(0,o.kt)("inlineCode",{parentName:"p"},"br10")," to your corresponding device name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    -netdev bridge,br=br10,id=net0 \\\n")),(0,o.kt)("h2",{id:"firewall"},"Firewall"),(0,o.kt)("p",null,"If you are using iptables or one of its frontends (like ufw) you may need to add a rule for the bridged network. In my case I was using ufw and had to add a rule to allow all in and out anywhere on virbr0. The interface name will depend on which of the steps above you followed."),(0,o.kt)("h2",{id:"operation-not-permitted-on-debian-systems"},(0,o.kt)("inlineCode",{parentName:"h2"},"Operation not permitted")," on Debian systems"),(0,o.kt)("p",null,"On Debian if you get:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"failed to create tun device: Operation not permitted\nqemu-system-x86_64: bridge helper failed\n")),(0,o.kt)("p",null,"it is because qemu-bridge-helper ",(0,o.kt)("a",{parentName:"p",href:"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=765936"},"doesn't have setuid by default"),", one solution is to manually set the setuid bit on the qemu-bridge-helper:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo chmod 4755 /usr/lib/qemu/qemu-bridge-helper\n")),(0,o.kt)("p",null,"Please note the effects of this command will be reset on every update of the package qemu-system-common and thus you will have to re-run it."),(0,o.kt)("p",null,"Another solution is to simply run qemu as root, but that's not recommended."))}m.isMDXComponent=!0}}]);