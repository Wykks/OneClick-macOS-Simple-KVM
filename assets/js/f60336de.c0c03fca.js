"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[300],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),d=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||c[m]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3234:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Guide to PCIe Passthrough (GPU and Sound)"},u=void 0,d={unversionedId:"guide-passthrough",id:"guide-passthrough",title:"Guide to PCIe Passthrough (GPU and Sound)",description:"Enable BIOS features",source:"@site/docs/guide-passthrough.md",sourceDirName:".",slug:"/guide-passthrough",permalink:"/docs/guide-passthrough",draft:!1,editUrl:"https://github.com/notAperson535/OneClick-macOS-Simple-KVM/tree/docs/docs/guide-passthrough.md",tags:[],version:"current",frontMatter:{title:"Guide to PCIe Passthrough (GPU and Sound)"},sidebar:"docs",previous:{title:"How to increase screen resolution",permalink:"/docs/guide-screen-resolution"},next:{title:"Audio passthrough (without external card)",permalink:"/docs/guide-audio"}},s={},c=[{value:"Enable BIOS features",id:"enable-bios-features",level:2},{value:"Get Some Information",id:"get-some-information",level:2},{value:"Example",id:"example",level:3},{value:"Load the vfio-pci module",id:"load-the-vfio-pci-module",level:2},{value:"Add Kernel Flags",id:"add-kernel-flags",level:2},{value:"AMD",id:"amd",level:3},{value:"Intel",id:"intel",level:3},{value:"Attach card to QEMU",id:"attach-card-to-qemu",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"enable-bios-features"},"Enable BIOS features"),(0,a.kt)("p",null,"To use PCIe Passthrough, you will need a compatible motherboard and CPU with support for iommu. Look up your motherboard manual on how to enable these features, but they are commonly named ",(0,a.kt)("inlineCode",{parentName:"p"},"VT-d")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"AMD Vi"),"."),(0,a.kt)("h2",{id:"get-some-information"},"Get Some Information"),(0,a.kt)("p",null,"To pass through a card, you'll need to know some value pertaining to the card itself: The Device IDs, and BDF IDs. The following command will give a list of relevant devices to use in the next steps."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'lspci -nn | grep "VGA\\|Audio"\n')),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"An example output might look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"26:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Curacao XT / Trinidad XT [Radeon R7 370 / R9 270X/370X] [1002:6810]\n26:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Oland/Hainan/Cape Verde/Pitcairn HDMI Audio [Radeon HD 7000 Series] [1002:aab0]\n")),(0,a.kt)("p",null,"The first value (",(0,a.kt)("inlineCode",{parentName:"p"},"26:00.0"),") is the BDF ID, and the last (",(0,a.kt)("inlineCode",{parentName:"p"},"1002:6810"),") is the Device ID. Cards with a built-in audio controller have to be passed together, so note the IDs for both subdevices."),(0,a.kt)("h2",{id:"load-the-vfio-pci-module"},"Load the vfio-pci module"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"vfio-pci")," module is not included in the kernel on all systems, you may need for load it as part of initramfs. Look up your distro's documentation on how to do this."),(0,a.kt)("h2",{id:"add-kernel-flags"},"Add Kernel Flags"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"iommu")," kernel module is not enabled by default, but you can enable it on boot by passing the following flags to the kernel. Replace the Device IDs with your corresponding card."),(0,a.kt)("h3",{id:"amd"},"AMD"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iommu=pt amd_iommu=on vfio-pci.ids=1002:66af,1002:ab20\n")),(0,a.kt)("h3",{id:"intel"},"Intel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iommu=pt intel_iommu=on vfio-pci.ids=1002:66af,1002:ab20\n")),(0,a.kt)("p",null,"To do this permanently, you can add it to your bootloader. If you're using GRUB, for example, edit ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/default/grub")," and add the previous lines to the ",(0,a.kt)("inlineCode",{parentName:"p"},"GRUB_CMDLINE_LINUX_DEFAULT")," section, then run ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo update-grub")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo grub-mkconfig")," on some systems) and reboot."),(0,a.kt)("h2",{id:"attach-card-to-qemu"},"Attach card to QEMU"),(0,a.kt)("p",null,"You will need to attach the cards using the BDF IDs for the audio and video controller. The following example shows the config for a card with two devices. The romfile parameter is optional. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," You may need to run ",(0,a.kt)("inlineCode",{parentName:"p"},"basic.sh")," as sudo for the card to work."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    -vga none \\\n    -device pcie-root-port,bus=pcie.0,multifunction=on,port=1,chassis=1,id=port.1 \\\n    -device vfio-pci,host=26:00.0,bus=port.1,multifunction=on,romfile=/path/to/card.rom \\\n    -device vfio-pci,host=26:00.1,bus=port.1 \\\n")))}m.isMDXComponent=!0}}]);